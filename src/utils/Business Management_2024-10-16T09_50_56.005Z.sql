CREATE TYPE "finance_status" AS ENUM (
	'collect',
	'pay',
	'other'
);
CREATE TABLE "employees" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"full_name" VARCHAR(255) NOT NULL,
	"birth_date" DATE NOT NULL,
	"gender" BOOLEAN NOT NULL,
	"phone_number" VARCHAR(255) NOT NULL,
	"email" VARCHAR(255) NOT NULL,
	"birth_place" VARCHAR(255) NOT NULL,
	"current_location" VARCHAR(255) NOT NULL,
	"ethnic" VARCHAR(255) NOT NULL,
	"marital" BOOLEAN NOT NULL,
	"certificate" VARCHAR(255) NOT NULL,
	"avatar" VARCHAR(255) NOT NULL,
	"create_at" TIME NOT NULL,
	"contract_id" INTEGER NOT NULL,
	"updated_at" TIMESTAMP,
	"citizen_id" INTEGER NOT NULL UNIQUE,
	PRIMARY KEY("id")
);


CREATE TABLE "students" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"full_name" VARCHAR(255) NOT NULL,
	"birth_date" DATE NOT NULL,
	"gender" BOOLEAN NOT NULL,
	"phone_number" VARCHAR(255) NOT NULL,
	"email" VARCHAR(255) NOT NULL,
	"current_location" VARCHAR(255) NOT NULL,
	"create_at" TIMESTAMP NOT NULL,
	"teacher_id" INTEGER NOT NULL,
	"course_id" INTEGER NOT NULL,
	"updated_at" TIMESTAMP,
	PRIMARY KEY("id")
);


CREATE TABLE "courses" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(255) NOT NULL,
	"status" BOOLEAN NOT NULL,
	"price" NUMERIC NOT NULL,
	"number_of_hours" INTEGER NOT NULL,
	"note" VARCHAR(255) NOT NULL,
	"bonus_service" INTEGER,
	"updated_at" TIMESTAMP,
	"create_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);


CREATE TABLE "jobs" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"position" VARCHAR(255) NOT NULL,
	"description" VARCHAR(255) NOT NULL,
	"note" VARCHAR(255) NOT NULL,
	PRIMARY KEY("id")
);


CREATE TABLE "services" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(255) NOT NULL,
	"status" BOOLEAN NOT NULL,
	"number_of_hours" NUMERIC NOT NULL,
	"price" INTEGER NOT NULL,
	"note" VARCHAR(255) NOT NULL,
	"bonus" VARCHAR(255),
	PRIMARY KEY("id")
);


CREATE TABLE "finance" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"status" FINANCE_STATUS NOT NULL,
	"amount" NUMERIC NOT NULL,
	"description" VARCHAR(255) NOT NULL,
	"collector" VARCHAR(255) NOT NULL,
	"payer" INTEGER NOT NULL,
	"note" VARCHAR(255) NOT NULL,
	"create_at" TIMESTAMP NOT NULL,
	"student_id" INTEGER,
	"updated_at" TIMESTAMP,
	PRIMARY KEY("id")
);


CREATE TABLE "absences" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"employee_id" INTEGER NOT NULL,
	"remaining" INTEGER NOT NULL,
	"reason" VARCHAR(255) NOT NULL,
	"create_at" TIMESTAMP NOT NULL,
	"update_at" TIMESTAMP,
	PRIMARY KEY("id")
);


CREATE TABLE "contracts" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"employee_id" INTEGER NOT NULL,
	"content" VARCHAR(255) NOT NULL,
	"from" DATE NOT NULL,
	"to" DATE NOT NULL,
	"create_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP,
	PRIMARY KEY("id")
);


CREATE TABLE "policies" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"content" VARCHAR(255) NOT NULL,
	"effective_date" DATE NOT NULL,
	"end_date" DATE,
	PRIMARY KEY("id")
);


CREATE TABLE "employee_vs_job" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"employee_id" INTEGER NOT NULL,
	"job_id" INTEGER NOT NULL,
	"assign_date" DATE NOT NULL,
	"end_date" DATE,
	PRIMARY KEY("id")
);


CREATE TABLE "employee_vs_course" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"employee_id" INTEGER NOT NULL,
	"course_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);


ALTER TABLE "employees"
ADD FOREIGN KEY("contract_id") REFERENCES "contracts"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "students"
ADD FOREIGN KEY("course_id") REFERENCES "courses"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "students"
ADD FOREIGN KEY("teacher_id") REFERENCES "employees"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "courses"
ADD FOREIGN KEY("bonus_service") REFERENCES "services"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "absences"
ADD FOREIGN KEY("employee_id") REFERENCES "employees"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "finance"
ADD FOREIGN KEY("student_id") REFERENCES "students"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "employee_vs_job"
ADD FOREIGN KEY("employee_id") REFERENCES "employees"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "employee_vs_job"
ADD FOREIGN KEY("job_id") REFERENCES "jobs"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "employee_vs_course"
ADD FOREIGN KEY("employee_id") REFERENCES "employees"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "employee_vs_course"
ADD FOREIGN KEY("course_id") REFERENCES "courses"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;